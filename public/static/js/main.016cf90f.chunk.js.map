{"version":3,"sources":["Alerts/IntroAlert.mp3","Alerts/IntervalAlert.mp3","actions/apiActions.js","components/Timer/CustomizeForm.js","containers/ModalForm.js","components/Workouts/Workout.js","components/Workouts/WorkoutList.js","containers/ModalList.js","components/Timer/TimerSettings.js","components/Timer/TimerDisplay.js","components/Timer/TimerControls.js","containers/Timer.js","actions/timerActions.js","components/About.js","containers/ModalAbout.js","containers/Header.js","containers/App.js","serviceWorker.js","reducers/timerReducer.js","reducers/workoutsReducer.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","apiURL","CustomizeForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","setState","defineProperty","handleSubmit","preventDefault","createWorkout","state","setCustomSettings","toggle","sets","running_sets","interval","rest","running","running_time","react_default","a","createElement","Form","onSubmit","FormGroup","Label","Input","onChange","bsSize","required","type","min","max","React","Component","connect","workout","data","method","headers","Accept","Content-Type","body","JSON","stringify","dispatch","fetch","concat","then","response","json","catch","errors","ModalForm","modal","Button","outline","color","size","onClick","Modal","isOpen","ModalHeader","ModalBody","Timer_CustomizeForm","Workout","WorkoutList","fetchWorkouts","_this$props","workouts","map","Workouts_Workout","key","id","ModalList","Workouts_WorkoutList","ModalFooter","Content-type","TimerSettings","Container","Row","Col","containers_ModalList","containers_ModalForm","className","TimerDisplay","runningSets","runningTime","renderRest","minutes","Math","floor","seconds","renderInterval","renderTimer","renderRunningTime","TimerControls","handleStartStop","handleResetTimer","Timer","settings","currentSettings","stopTimer","startTimer","console","log","updateRunning","restTimer","setInterval","restCountdown","intervalTimer","intervalCountdown","updateRunningSets","currentSeconds","elapsedTime","playAlert","clearInterval","_this$props$state","_this$currentSettings","reloadTimer","pauseAlert","stopRunning","setCurrentSettings","introAlert","alerts","intervalAlert","volume","play","pause","currentTime","Audio","intro_alert","interval_alert","_this$props$state2","Timer_TimerSettings","setHighIntensity","setLowIntensity","Timer_TimerDisplay","Timer_TimerControls","About","ModalAbout","Link","to","components_About","Header","containers_ModalAbout","App","containers_Header","containers_Timer","Boolean","window","location","hostname","match","initialState","timerReducer","arguments","length","undefined","action","objectSpread","workoutsReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.016cf90f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IntroAlert.8ecbe56d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/IntervalAlert.7a55923a.mp3\";","const apiURL = 'http://localhost:3001'\n\nexport const fetchWorkouts = () => {\n  let data = {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  }\n\n  return dispatch => {\n    fetch(`${apiURL}/workouts`, data)\n      .then(response => response.json())\n      .then(workouts => dispatch({\n          type: 'FETCH_WORKOUTS',\n          workouts\n      }))\n      .catch(errors => errors)\n  }\n}\n\nexport const createWorkout = (workout) => { \n  let data = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({workout})\n  }\n\n  return dispatch => {\n    fetch(`${apiURL}/workouts`, data)\n      .then(response => response.json())\n      .then(workout => dispatch({\n        type: 'CREATE_WORKOUT',\n        workout\n      }))\n      .catch(errors => errors)\n  }\n}","import React from 'react';\nimport { Form, FormGroup, Input, Label } from 'reactstrap';\nimport { createWorkout } from '../../actions/apiActions'\n\nimport { connect } from 'react-redux'\n\nclass CustomizeForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      name: '',\n      sets: 0,\n      running_sets: 0,\n      interval: 0,\n      rest: 0,\n      running: false,\n      running_time: 0\n      };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.createWorkout(this.state)\n    this.props.setCustomSettings(this.state)\n    this.props.toggle()\n  }\n\n  render() {\n    return (\n      <div>\n          <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Label >Workout Name</Label>\n              <Input onChange={this.handleChange} \n              name=\"name\"\n              value={this.state.name}\n              bsSize=\"sm\"\n              required />\n            </FormGroup>\n            <FormGroup>\n              <Label >Number of Sets</Label>\n              <Input onChange={this.handleChange} \n              type=\"number\"\n              min=\"1\"\n              name=\"sets\"\n              value={this.state.sets}\n              bsSize=\"sm\" />\n            </FormGroup>\n            <FormGroup>\n              <Label >Interval Length (secs)</Label>\n              <Input onChange={this.handleChange}\n              type=\"number\"\n              min=\"3\"\n              max=\"60\" \n              name=\"interval\"\n              value={this.state.interval}\n              bsSize=\"sm\" />\n            </FormGroup>\n            <FormGroup>\n              <Label >Rest Length (secs)</Label>\n              <Input onChange={this.handleChange}\n              type=\"number\"\n              min=\"3\"\n              max=\"60\" \n              name=\"rest\"\n              value={this.state.rest}\n              bsSize=\"sm\" />\n            </FormGroup>\n            <FormGroup>\n              \n              <Input type=\"submit\" value=\"Update Settings\" bsSize=\"sm\"></Input>\n            </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { createWorkout })(CustomizeForm);","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport CustomizeForm from '../components/Timer/CustomizeForm'\n\nclass ModalForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline color=\"info\" size=\"sm\" onClick={this.toggle}>Customize</Button>\n        <Modal  isOpen={this.state.modal} toggle={this.toggle} >\n          <ModalHeader  toggle={this.toggle}>Customize Settings:</ModalHeader>\n          <ModalBody >\n            <CustomizeForm setCustomSettings={this.props.setCustomSettings} toggle={this.toggle} />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalForm;","import React from 'react';\n\n\nconst Workout = (props) => {\n  \n  const { workout, setCustomSettings, toggle } = props\n\n  const handleClick = () => {\n    setCustomSettings(workout)\n    toggle()\n    \n  }\n\n  return (\n    <div>\n      <p onClick={handleClick}>{workout.name}</p>\n    </div>\n  );\n};\n\nexport default Workout;","import React from 'react';\nimport Workout from './Workout'\n\nclass WorkoutList extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchWorkouts()\n  }\n\n  render() {\n\n    const { workouts, setCustomSettings, toggle } = this.props\n\n    return (\n      <div>\n        { workouts.map(workout => <Workout key={workout.id} workout={workout} setCustomSettings={setCustomSettings} toggle={toggle}/>)}\n      </div>\n    );\n  }\n}\n\nexport default WorkoutList;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { fetchWorkouts } from '../actions/apiActions'\nimport { connect } from 'react-redux'\nimport WorkoutList from '../components/Workouts/WorkoutList';\n\nclass ModalList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    const { workouts, setCustomSettings, fetchWorkouts } = this.props\n   \n    return (\n      <div>\n        <Button outline color=\"info\" size=\"sm\" onClick={this.toggle}>Workouts</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} >\n          <ModalHeader toggle={this.toggle}>Workouts</ModalHeader>\n          <ModalBody >\n           <WorkoutList workouts={workouts} setCustomSettings={setCustomSettings} fetchWorkouts={fetchWorkouts} toggle={this.toggle} /> \n          </ModalBody>\n          <ModalFooter >\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    workouts: state.workouts\n  }\n}\n\nexport default connect(mapStateToProps, {fetchWorkouts})(ModalList);","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap'\nimport ModalForm from '../../containers/ModalForm'\nimport ModalList from '../../containers/ModalList'\n\nconst TimerSettings = (props) => {\n\n  const { setCustomSettings } = props\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <ModalList setCustomSettings={setCustomSettings}/>\n          <ModalForm setCustomSettings={setCustomSettings}/>\n        </Col>\n      </Row>\n      <hr className=\"my-2\" />\n    </Container>\n  );\n};\n\nexport default TimerSettings;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap'\n\nconst TimerDisplay = (props) => {\n\n  const {\n    name,\n    sets, \n    runningSets,\n    interval,\n    rest,\n    runningTime} = props\n\n  const renderTimer = (interval, rest) => {\n      if (rest > 0) {\n        return renderRest(rest)\n      } else if (rest === 0) {\n        return renderInterval(interval)\n      } else {\n        return <h3>--</h3>\n      }\n    }\n    \n  const renderRest = (rest) => {\n      let minutes = Math.floor(rest / 60)\n      let seconds = rest - (minutes * 60)\n    \n      if (seconds < 10) {\n        return <h1 className=\"display-2\">0{minutes}:0{seconds}</h1>\n      } else {\n        return <h1 className=\"display-2\">0{minutes}:{seconds}</h1>\n      }\n    }\n    \n  const renderInterval = (interval) => {\n      let minutes = Math.floor(interval / 60)\n      let seconds = interval - minutes * 60\n    \n      if (seconds < 10) {\n        return <h1 className=\"display-1\">0{minutes}:0{seconds}</h1>\n      } else {\n        return <h1 className=\"display-1\">0{minutes}:{seconds}</h1> \n      }\n    }\n    \n   const renderRunningTime = (runningTime) => {\n      let minutes = Math.floor(runningTime / 60)\n      let seconds = runningTime - minutes * 60\n    \n        if (seconds < 10) {\n          return <p>0{minutes}:0{seconds}</p>\n        } else {\n          return <p>0{minutes}:{seconds}</p>\n        }\n    } \n\n  return (\n    <Container className=\"container-bg\">\n      <Row>\n        <Col>\n        <h5>{name}</h5>\n        Set {runningSets + 1}/{sets}\n        {renderTimer(interval, rest)}\n        Elapsed\n        {renderRunningTime(runningTime)}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TimerDisplay;","import React from 'react';\nimport { Container, Button } from 'reactstrap'\n\nconst TimerControls = (props) => {\n\n  const { handleStartStop, handleResetTimer, running } = props\n\n  return (\n    <Container>\n      <hr className=\"my-2\" />\n      <div>\n      <Button className=\"btn-circle btn-xl\" outline color=\"info\" onClick={handleStartStop}>{running ? 'PAUSE' : 'START'}</Button>\n      </div>\n      <br></br>\n      <div>\n      <Button outline color=\"info\" onClick={handleResetTimer}>Reset</Button>\n      </div>\n      \n    </Container>\n  );\n};\n\nexport default TimerControls;","import React from 'react';\nimport TimerSettings from '../components/Timer/TimerSettings'\nimport TimerDisplay from '../components/Timer/TimerDisplay'\nimport TimerControls from '../components/Timer/TimerControls'\nimport intro_alert from '../Alerts/IntroAlert.mp3'\nimport interval_alert from '../Alerts/IntervalAlert.mp3'\n\nimport { \n  setCustomSettings,\n  updateRunning,\n  updateRunningSets,\n  stopRunning,\n  restCountdown,\n  intervalCountdown,\n  reloadTimer,\n  setCurrentSettings\n\n} \nfrom '../actions/timerActions'\n\nimport { connect } from 'react-redux'\n\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.currentSettings = {\n      name: '',\n      sets: 0,\n      runningSets: 0,\n      interval: 0,\n      rest: 0,\n      running: false,\n      runningTime: 0\n    }\n\n    this.alerts = {\n      introAlert: new Audio(intro_alert),\n      intervalAlert: new Audio(interval_alert)\n    }\n  }\n\n  //// TIMER SETTINGS ////\n\n  setCustomSettings = (settings) => {\n    this.props.setCustomSettings(settings)\n    this.currentSettings = settings\n\n    if (this.props.state.running) { \n      this.stopTimer()\n    }\n  }\n\n//// TIMER DISPLAY /////\n\n//// TIMER CONTROLS /////\n\n  handleStartStop = () => {\n    if (!this.props.state.running) {\n      this.startTimer()\n    } else {\n      this.stopTimer()\n    }\n  }\n\n  startTimer = () => {\n    console.log(\"timer state is:\", this.props.state)\n    if (this.props.state.sets > 0) { \n      this.props.updateRunning()\n\n      if (this.props.state.rest > 0) {\n        this.restTimer = setInterval(this.restCountdown, 1000)\n      } else {\n        this.intervalTimer = setInterval(this.intervalCountdown, 1000)\n      }\n      \n    } else {\n      this.props.updateRunningSets(this.props.state.sets)\n    }\n  }\n\n  restCountdown = () => {\n    const currentSeconds = this.props.state.rest - 1\n    const elapsedTime = this.props.state.running_time + 1 \n\n    this.props.restCountdown(currentSeconds, elapsedTime)\n\n    this.playAlert()\n\n    if (currentSeconds === 0) {\n      clearInterval(this.restTimer)\n      this.intervalTimer = setInterval(this.intervalCountdown, 1000)\n    }\n  }\n\n  intervalCountdown = () => {\n    const currentSeconds = this.props.state.interval - 1 \n    const elapsedTime = this.props.state.running_time + 1 \n   \n    this.props.intervalCountdown(currentSeconds, elapsedTime)\n\n    this.playAlert()\n\n    if (currentSeconds === 0) {\n      clearInterval(this.intervalTimer)\n\n      //pass: \n      const { sets, running_sets} = this.props.state\n      const { interval, rest } = this.currentSettings\n      this.props.reloadTimer(sets, running_sets, interval, rest )\n    \n      this.startTimer()\n    }\n  }\n\n  stopTimer = () => {\n    this.pauseAlert()\n    clearInterval(this.restTimer)\n    clearInterval(this.intervalTimer)\n    \n    this.props.stopRunning()\n  }\n\n  handleResetTimer = () => {\n    this.stopTimer()\n    this.props.setCurrentSettings(this.currentSettings)\n  }\n\n  playAlert = () => {\n    const introAlert = this.alerts.introAlert\n    const intervalAlert = this.alerts.intervalAlert\n   \n     if (this.props.state.rest === 3) {\n      introAlert.volume = 0.3\n      introAlert.play() \n    } else if (this.props.state.interval === 0){\n      intervalAlert.volume = 0.3\n      intervalAlert.play() \n    }\n  }\n\n  pauseAlert = () => {\n    const introAlert = this.alerts.introAlert\n    introAlert.pause()\n    introAlert.currentTime = this.currentSettings.rest\n  }\n\n \n  render() {\n    const { name, rest, interval, running_sets, running, running_time } = this.props.state\n    const { sets } = this.currentSettings\n\n    return (\n      <div className=\"App timer-container\">\n        <TimerSettings\n          setHighIntensity={this.setHighIntensity}\n          setLowIntensity={this.setLowIntensity}\n          setCustomSettings={this.setCustomSettings}\n        />\n\n        <TimerDisplay\n          name={name}\n          runningSets={running_sets}\n          sets={sets}\n          interval={interval}\n          rest={rest}\n          runningTime={running_time}\n        />\n\n        <TimerControls \n          handleStartStop={this.handleStartStop}\n          handleResetTimer={this.handleResetTimer}\n          running={running}\n          />\n      </div>\n    );\n  }\n}\n///?? ALSO CREATE REDUCER FOR HI/LO/CURRENT SETTINGS TO BE PASSED AS PROPS??\nconst mapStateToProps = (state) => {\n  return {\n    state: state.settings\n  }\n}\n\nexport default connect(mapStateToProps, \n  { \n    setCustomSettings, \n    updateRunning,\n    updateRunningSets,\n    stopRunning,\n    restCountdown,\n    intervalCountdown,\n    reloadTimer,\n    setCurrentSettings\n\n  })(Timer);","\nexport const setCustomSettings = (settings) => {\n  return {\n    type: 'SET_CUSTOM_SETTINGS',\n    settings\n  }\n}\n\nexport const updateRunning = () => {\n  return {\n    type: 'UPDATE_RUNNING',\n  }\n}\n\nexport const stopRunning = () => {\n  return {\n    type: 'STOP_RUNNING',\n  }\n}\n\nexport const updateRunningSets = (runningSets) => {\n  return {\n    type: 'UPDATE_RUNING_SETS',\n    runningSets\n  }\n}\n\nexport const restCountdown = (currentSeconds, elapsedTime) => {\n  return {\n    type: 'REST_COUNTDOWN',\n    currentSeconds,\n    elapsedTime\n  }\n}\n\nexport const intervalCountdown = (currentSeconds, elapsedTime) => {\n  return {\n    type: 'INTERVAL_COUNTDOWN',\n    currentSeconds,\n    elapsedTime\n\n  }\n}\n\nexport const reloadTimer = (sets, running_sets, interval, rest ) => {\n  return {\n    type: 'RELOAD_TIMER',\n    sets,\n    running_sets,\n    interval,\n    rest\n  }\n}\n\nexport const setCurrentSettings = (settings) => {\n  return {\n    type: 'SET_CURRENT_SETTINGS',\n    settings\n  }\n}\n\n\n\n","import React from 'react';\n\nconst About = () => {\n    return(\n        <div>\n          <p>High-intensity interval training (HIIT), also called high-intensity intermittent exercise (HIIE) or sprint interval training (SIT), is a form of interval training, a cardiovascular exercise strategy alternating short periods of intense anaerobic exercise with less intense recovery periods, until too exhausted to continue.  </p>\n          <p>Use this timer to set your HIIT excersice and rest intervals. Typically ranging from 15 to 30 sets of 30 to 60 seeconds of excercise, followed by 10 to 20 seconds of rest.</p>\n          <p>Default configurations are provided, however, you can customize your own.</p>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport About from '../components/About'\n\nclass ModalAbout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n       <Link className=\"App-link\" to=\"/\" color=\"info\" onClick={this.toggle}>About</Link>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Interval Trainig Timer</ModalHeader>\n          <ModalBody >\n            <About/>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalAbout;","import React from 'react';\nimport ModalAbout from './ModalAbout'\nconst Header = () => {\n \n  return (\n    <header className=\"App-header\">\n      <h5>Interval Training Timer</h5>\n      <ModalAbout className=\"App-link\"/>\n    </header>\n  );\n};\n\n\n\nexport default Header;","import React, { Component } from 'react';\nimport Timer from './Timer'\nimport Header from './Header'\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Timer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  name: '',\n  sets: 0,\n  running_sets: 0,\n  interval: 0,\n  rest: 0,\n  running: false,\n  running_time: 0\n}\n\nconst timerReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'SET_HIGH_INTENSITY':\n      return action.settings\n\n    case 'SET_LOW_INTENSITY':\n      return action.settings\n\n    case 'SET_CUSTOM_SETTINGS':\n      return action.settings\n\n    case 'UPDATE_RUNNING':\n      return {\n        ...state, running: true\n      }\n\n     case 'STOP_RUNNING':\n      return {\n        ...state, running: false\n      } \n    \n    case 'UPDATE_RUNING_SETS':\n      return {\n      ...state, running_sets: action.runningSets\n    }\n\n    case 'REST_COUNTDOWN':\n      return {\n        ...state, rest: action.currentSeconds, running_time: action.elapsedTime\n      }\n\n    case 'INTERVAL_COUNTDOWN':\n      return {\n      ...state, interval: action.currentSeconds, running_time: action.elapsedTime\n    }\n\n    case 'RELOAD_TIMER':\n      return {\n        ...state, sets: action.sets - 1, running_sets: action.running_sets + 1, interval: action.interval, rest: action.rest\n      }\n\n     case 'SET_CURRENT_SETTINGS':\n      return action.settings\n    \n    default:\n    return state\n  }\n \n}\n\nexport default timerReducer;","\nconst workoutsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_WORKOUTS':\n      return action.workouts\n\n     case 'CREATE_WORKOUT':\n      return state.concat(action.workout)\n\n    default:\n      return state\n  \n  }\n}\n\nexport default workoutsReducer;","import { combineReducers } from 'redux'\nimport timerReducer from './timerReducer'\nimport workoutsReducer from './workoutsReducer'\n\nconst rootReducer = combineReducers({\n  settings: timerReducer,\n  workouts: workoutsReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport rootReducer from './reducers/rootReducer.js'\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk))\n\n\nReactDOM.render(\n  <Provider store={store}>\n     <App />\n  </Provider>\n , \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}